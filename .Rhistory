data_alsophila_setosa
dim
dim(data_alsophila_setosa)
dim(data_cyathea)
dim(data_cyatheaphal)
dim(data_cytheaphal)
data_alsophila_setosa <- data_alsophila_setosa[, 1:124]
data_cyathea <- data_cyathea[, 1:124]
data_cyatheaphal <- data_cytheaphal[ , 1:124]
# check out if there are strings which are not taxonomists
det_names_Alsophila <- get_det_names(data_alsophila_setosa, freq = TRUE)
det_names_Cyathea <- get_det_names(data_cyathea, freq = TRUE)
det_names_Cyatheaphal <- get_det_names(data_cyatheaphal, freq = TRUE)
all_occ <- rbind(data_alsophila_setosa, data_cyathea, data_cyatheaphal) # binding all data in a single dataframe
data_alsophila_setosa
data_cyathea
?occ_search
A_setosa <- gbif("Alsophila", "setosa", geo = TRUE)
rm(A_setosa)
occ_allspp <- occ_search(scientificName = c("Alsophila setosa", "Cyathea corcovadensis", "Cyathea phalerata"), limit = 5000, return = "data",
hasCoordinate = TRUE)
occ_allspp
colnames(occ_allspp)
colnames(occ_allspp$data)
occ_allspp$data
class(occ_allspp$data)
class(occ_allspp)
occ_allspp
occ_allspp$data$istitutionCode
str(occ_allspp)
occ_allspp$`Alsophila setosa`
lapply(occ_allspp, function(x){
x$data
})
lapply(c("Alsophila setosa", "Cythea corcovadensis", "Cythea phalerata"), function(x){
occ_allspp$`x`$data
})
lapply(c("Alsophila setosa", "Cythea corcovadensis", "Cythea phalerata"), function(x){
occ_allspp$x$data
})
lapply(c("Alsophila setosa", "Cyathea corcovadensis", "Cyathea phalerata"), function(x){
occ_allspp$x$data
})
lapply(c(`Alsophila setosa`, `Cyathea corcovadensis`, `Cyathea phalerata`), function(x){
occ_allspp$x$data
})
occ_allspp$Alsophila setosa$data
occ_allspp$"Alsophila setosa"$data
occ_allspp$"Alsophila setosa"$data
lapply(c("Alsophila setosa", "Cyathea corcovadensis", "Cyathea phalerata"), function(x){
occ_allspp$"x"$data
})
occ_allspp$x$data
lapply(c("Alsophila setosa", "Cyathea corcovadensis", "Cyathea phalerata"), function(x){
occ_allspp$x$data
})
sapply(c("Alsophila setosa", "Cyathea corcovadensis", "Cyathea phalerata"), function(x){
occ_allspp$x$data
})
occ_allspp$"Cyathea corcovadensis"$data
sapply(c("Alsophila setosa", "Cyathea corcovadensis", "Cyathea phalerata"), function(x){
occ_allspp$x$data
})
class(occ_allspp)
is.list(occ_allspp)
occ_allspp$`Alsophila setosa`
occ_allspp$`Alsophila setosa`$data
length(occ_allspp)
occ_allspp[[1]]$data
sapply(1:length(occ_allspp), function(x){
occ_allspp[[x]]$data
})
lenght(sapply(1:length(occ_allspp), function(x){
occ_allspp[[x]]$data
}))
length(sapply(1:length(occ_allspp), function(x){
occ_allspp[[x]]$data
}))
lapply(sapply(1:length(occ_allspp), function(x){
occ_allspp[[x]]$data
})), function(x) rbind(x))
dplyr::bind_rows(sapply(1:length(occ_allspp), function(x){
occ_allspp[[x]]$data
}), .id = "column_label")
occ_allspp <- occ_search(scientificName = c("Alsophila setosa", "Cyathea corcovadensis", "Cyathea phalerata"),
limit = 5000, return = "data",
hasCoordinate = TRUE)
occ_allspp <- occ_search(scientificName = c("Alsophila setosa", "Cyathea corcovadensis", "Cyathea phalerata"),
limit = 5000, return = "data",
hasCoordinate = TRUE)
data_all_occ <- dplyr::bind_rows(sapply(1:length(occ_allspp),
function(x){
occ_allspp[[x]]$data
}
),
.id = "column_label")
occ_allspp
ig.names
# check out if there are strings which are not taxonomists
det_names_all <- get_det_names(data_all_occ, freq = TRUE)
det_names_all
data("speciaLists") #specialist data frame
ig.names
ig.names <- c("-", "Anonymous", "Unknown") # some possible characters that do not corresponds to a specialist
occ.class_all <- classify_occ(occ = data_all_occ, spec = speciaLists, ignore.det.names = ig.names)
colnames(data_all_occ)
?classify_occ
occ.class_all <- classify_occ(occ = data_all_occ, spec = speciaLists,crit.levels = c("det_by_spec", "taxonomist", "sci_colection"), ignore.det.names = ig.names, na.rm.coords = TRUE)
colnames(data_all_occ)
occ.class_all <- classify_occ(occ = data_all_occ, spec = speciaLists, ignore.det.names = ig.names, na.rm.coords = TRUE, media.type = "extensions.http...rs.tdwg.org.dwc.terms.MeasurementOrFact.http...rs.tdwg.org.dwc.terms.measurementUnit.5")
occ.class_all
occ.class_all
speciaLists
head(data_all_occ)
dim(data_all_occ)
colnames(A.setosa)
data_all_occ <- dplyr::bind_rows(sapply(1:length(occ_allspp),
function(x){
occ_allspp[[x]]$data[, colnames(A.setosa)]
}
),
.id = "column_label")
data_all_occ <- dplyr::bind_rows(sapply(1:length(occ_allspp),
function(x){
occ_allspp[[x]]$data[, c("gbifID", "species", "scientificName", "locality", "decimalLatitude", "decimalLongitude", "taxonKey", "basisOfRecord", "institutionCode", "collectionCode", "catalogNumber", "recordNumber", "identifiedBy", "recordedBy", "typeStatus", "mediaType")]
}
),
.id = "column_label")
occ_allspp$`Cyathea corcovadensis`$data$extensions.http...rs.tdwg.org.ac.terms.Multimedia.http...purl.org.dc.elements.1.1.creator
data_all_occ <- dplyr::bind_rows(sapply(1:length(occ_allspp),
function(x){
occ_allspp[[x]]$data[, c("gbifID", "species", "scientificName", "locality", "decimalLatitude", "decimalLongitude", "taxonKey", "basisOfRecord", "institutionCode", "collectionCode", "catalogNumber", "recordNumber", "identifiedBy", "recordedBy", "typeStatus", "data$extensions.http...rs.tdwg.org.ac.terms.Multimedia.http...purl.org.dc.elements.1.1.creator")]
}
),
.id = "column_label")
data_all_occ[, ("gbifID", "species", "scientificName", "locality", "decimalLatitude", "decimalLongitude", "taxonKey", "basisOfRecord", "institutionCode", "collectionCode", "catalogNumber", "recordNumber", "identifiedBy", "recordedBy", "typeStatus", "data$extensions.http...rs.tdwg.org.ac.terms.Multimedia.http...purl.org.dc.elements.1.1.creator")]
data_all_occ[, c("gbifID", "species", "scientificName", "locality", "decimalLatitude", "decimalLongitude", "taxonKey", "basisOfRecord", "institutionCode", "collectionCode", "catalogNumber", "recordNumber", "identifiedBy", "recordedBy", "typeStatus", "data$extensions.http...rs.tdwg.org.ac.terms.Multimedia.http...purl.org.dc.elements.1.1.creator")]
colnames(data_all_occ)
data_all_occ[, c("gbifID", "species", "scientificName", "locality", "decimalLatitude", "decimalLongitude", "taxonKey", "basisOfRecord", "institutionCode", "collectionCode", "catalogNumber", "recordNumber", "identifiedBy", "recordedBy", "typeStatus")]
colnames(data_all_occ)
data_all_occ[, c("gbifID", "species", "scientificName", "locality", "decimalLatitude", "decimalLongitude", "taxonKey", "basisOfRecord", "institutionCode", "collectionCode", "catalogNumber", "recordNumber", "identifiedBy", "recordedBy", "typeStatus", 432)]
data_all_occ <- data_all_occ[, c("gbifID", "species", "scientificName", "locality", "decimalLatitude", "decimalLongitude", "taxonKey", "basisOfRecord", "institutionCode", "collectionCode", "catalogNumber", "recordNumber", "identifiedBy", "recordedBy", "typeStatus")]
data_all_occ <- dplyr::bind_rows(sapply(1:length(occ_allspp),
function(x){
occ_allspp[[x]]$data
}
),
.id = "column_label")
match(data_all_occ, c("gbifID", "species", "scientificName", "locality", "decimalLatitude", "decimalLongitude", "taxonKey", "basisOfRecord", "institutionCode", "collectionCode", "catalogNumber", "recordNumber", "identifiedBy", "recordedBy", "typeStatus"))
match(colnames(data_all_occ), c("gbifID", "species", "scientificName", "locality", "decimalLatitude", "decimalLongitude", "taxonKey", "basisOfRecord", "institutionCode", "collectionCode", "catalogNumber", "recordNumber", "identifiedBy", "recordedBy", "typeStatus"))
match(c("gbifID", "species", "scientificName", "locality", "decimalLatitude", "decimalLongitude", "taxonKey", "basisOfRecord", "institutionCode", "collectionCode", "catalogNumber", "recordNumber", "identifiedBy", "recordedBy", "typeStatus"), colnames(data_all_occ))
colnames(data_all_occ)
cols_sub <- c(match(c("gbifID", "species", "scientificName", "locality", "decimalLatitude", "decimalLongitude", "taxonKey", "basisOfRecord", "institutionCode", "collectionCode", "catalogNumber", "recordNumber", "identifiedBy", "recordedBy", "typeStatus"), colnames(data_all_occ)), 369)
data_all_occ_sub <- data_all_occ[, cols_sub]
data_all_occ_sub
colnames(data_all_occ_sub) <- c("gbifID", "species", "scientificName", "locality", "decimalLatitude", "decimalLongitude", "taxonKey", "basisOfRecord", "institutionCode", "collectionCode", "catalogNumber", "recordNumber", "identifiedBy", "recordedBy", "typeStatus", "mediaType")
# check out if there are strings which are not taxonomists
det_names_all <- get_det_names(data_all_occ_sub, freq = TRUE)
ig.names <- c("-", "Anonymous", "Unknown") # some possible characters that do not corresponds to a specialist
data("speciaLists") #specialist data frame
occ.class_all <- classify_occ(occ = data_all_occ_sub, spec = speciaLists, ignore.det.names = ig.names, na.rm.coords = TRUE)
colnames(data_all_occ)
match(c("gbifID", "species", "year", "dataIdentified", "scientificName", "locality", "decimalLatitude", "decimalLongitude", "taxonKey", "basisOfRecord", "institutionCode", "collectionCode", "catalogNumber", "recordNumber", "identifiedBy", "recordedBy", "typeStatus", "occurrenceID"), colnames(data_all_occ))
match(c("gbifID", "species", "year", "dateIdentified", "scientificName", "locality", "decimalLatitude", "decimalLongitude", "taxonKey", "basisOfRecord", "institutionCode", "collectionCode", "catalogNumber", "recordNumber", "identifiedBy", "recordedBy", "typeStatus", "occurrenceID"), colnames(data_all_occ))
cols_sub <- c(match(c("gbifID", "species", "year", "dateIdentified", "scientificName", "locality", "decimalLatitude", "decimalLongitude", "taxonKey", "basisOfRecord", "institutionCode", "collectionCode", "catalogNumber", "recordNumber", "identifiedBy", "recordedBy", "typeStatus", "occurrenceID"), colnames(data_all_occ)), 369)
data_all_occ_sub <- data_all_occ[, cols_sub]
colnames(data_all_occ_sub) <- c("gbifID", "species", "year", "dateIdentified", "scientificName", "locality", "decimalLatitude", "decimalLongitude", "taxonKey", "basisOfRecord", "institutionCode", "collectionCode", "catalogNumber", "recordNumber", "identifiedBy", "recordedBy", "typeStatus", "occurrenceID", "mediaType")
# check out if there are strings which are not taxonomists
det_names_all <- get_det_names(data_all_occ_sub, freq = TRUE)
ig.names <- c("-", "Anonymous", "Unknown") # some possible characters that do not corresponds to a specialist
data("speciaLists") #specialist data frame
occ.class_all <- classify_occ(occ = data_all_occ_sub, spec = speciaLists, ignore.det.names = ig.names, na.rm.coords = TRUE)
occ.class_all
occ.class_all <- classify_occ(occ = data_all_occ_sub, spec = speciaLists, na.rm.coords = TRUE)
occ.class_all <- classify_occ(occ = data_all_occ_sub, spec = speciaLists)
occ.class_all
data_all_occ_sub
class(data_all_occ_sub)
colnames(data_all_occ_sub)
data_all_occ_sub$mediaType
data_all_occ_sub$species
data_all_occ_sub$year
data_all_occ_sub$gbifID
data_all_occ_sub$dateIdentified
data_all_occ_sub$scientificName
data_all_occ_sub$locality
data_all_occ_sub$decimalLatitude
data_all_occ_sub$decimalLongitude
data_all_occ_sub$taxonKey
data_all_occ_sub$basisOfRecord
data_all_occ_sub$collectionCode
data_all_occ_sub$catalogNumber
data_all_occ_sub$recordNumber
data_all_occ_sub$identifiedBy
data_all_occ_sub$recordedBy
data_all_occ_sub$mediaType
library(naturaList)
library(devtools)
library(raster)
library(maptools)
library(rnaturalearth)
library(sf)
library(devtools)
install.packages("rgbif")
library(rgbif)
occ_allspp <- occ_search(scientificName = c("Alsophila setosa", "Cyathea corcovadensis", "Cyathea phalerata"),
limit = 5000, return = "data",
hasCoordinate = TRUE) # downloading occurrence data
data_all_occ <- dplyr::bind_rows(sapply(1:length(occ_allspp),
function(x){
occ_allspp[[x]]$data
}
),
.id = "column_label")
cols_sub <- c(match(c("gbifID", "species", "year", "dateIdentified", "scientificName", "locality", "decimalLatitude", "decimalLongitude", "taxonKey", "basisOfRecord", "institutionCode", "collectionCode", "catalogNumber", "recordNumber", "identifiedBy", "recordedBy", "typeStatus", "occurrenceID"), colnames(data_all_occ)), 369) # renaming columns to contain all information that will be used for classification
data_all_occ_sub <- data_all_occ[, cols_sub]
cols_sub
data_all_occ
colnames(data_all_occ)
cols_sub <- match(c("gbifID", "species", "year", "dateIdentified", "scientificName", "locality", "decimalLatitude", "decimalLongitude", "taxonKey", "basisOfRecord", "institutionCode", "collectionCode", "catalogNumber", "recordNumber", "identifiedBy", "recordedBy", "typeStatus", "occurrenceID", "mediaType"), colnames(data_all_occ)) # renaming columns to contain all information that will be used for classification
cols_sub
cols_sub <- c(match(c("gbifID", "species", "year", "dateIdentified", "scientificName", "locality", "decimalLatitude", "decimalLongitude", "taxonKey", "basisOfRecord", "institutionCode", "collectionCode", "catalogNumber", "recordNumber", "identifiedBy", "recordedBy", "typeStatus", "occurrenceID"), colnames(data_all_occ)), 113) # renaming columns to contain all information that will be used for classification
cols_sub
data_all_occ_sub <- data_all_occ[, cols_sub]
data_all_occ_sub
colnames(data_all_occ_sub) <- c("gbifID", "species", "year", "dateIdentified", "scientificName", "locality", "decimalLatitude", "decimalLongitude", "taxonKey", "basisOfRecord", "institutionCode", "collectionCode", "catalogNumber", "recordNumber", "identifiedBy", "recordedBy", "typeStatus", "occurrenceID", "mediaType") # using only the information that will be used to classify the occurrences
# check out if there are strings which are not taxonomists
det_names_all <- get_det_names(data_all_occ_sub, freq = TRUE)
ig.names <- c("-", "Anonymous", "Unknown") # some possible characters that do not corresponds to a specialist
data("speciaLists") #specialist data frame
occ.class_all <- classify_occ(occ = data_all_occ_sub, spec = speciaLists, ignore.det.names = ig.names, na.rm.coords = TRUE)
occ.class_all
occ.class_all
class(data_all_occ_sub)
str(data_all_occ_sub)
occ.class_all
data_all_occ
classify_occ(occ = data_all_occ_sub, spec = speciaLists, crit.levels =  "det_by_spec", ignore.det.names = ig.names, na.rm.coords = TRUE)
classify_occ
occ <- data_all_occ
spec = NULL
na.rm.coords = TRUE
crit.levels = c("det_by_spec",
"taxonomist", "image", "sci_colection", "field_obs", "no_criteria_met")
ignore.det.names = NULL
spec.ambiguity = "not.spec"
institution.source = "institutionCode"
collection.code = "collectionCode"
catalog.number = "catalogNumber"
year.event = "year"
date.identified = "dateIdentified"
scientific.name = "species"
determined.by = "identifiedBy"
longitude = "decimalLongitude"
latitude = "decimalLatitude"
basis.of.rec = "basisOfRecord"
media.type = "mediaType"
occ.id = "occurrenceID"
natList_column <- "naturaList_levels" %in% colnames(occ)
natList_column
if (natList_column) {
col.number <- grep("naturaList_levels", colnames(occ))
occ <- occ[, -col.number]
warning("'occ' already had classification. The classification was remade")
}
occ
r.occ <- reduce.df(occ, institution.source = institution.source,
collection.code = collection.code, catalog.number = catalog.number,
year.event = year.event, date.identified = date.identified,
scientific.name = scientific.name, determined.by = determined.by,
longitude = longitude, latitude = latitude, basis.of.rec = basis.of.rec,
media.type = media.type, occ.id = occ.id, na.rm.coords = na.rm.coords)
reduce.df <- function(df,
institution.source = "institutionCode",
collection.code = "collectionCode",
catalog.number = "catalogNumber",
year.event = "year",
date.identified = "dateIdentified",
scientific.name = "species",
determined.by = "identifiedBy",
longitude = "decimalLongitude",
latitude = "decimalLatitude",
basis.of.rec = "basisOfRecord",
media.type = "mediaType",
occ.id = "occurrenceID",
na.rm.coords = TRUE){
institution.source <- as.character(df[,institution.source])
collection.code <- as.character(df[,collection.code])
catalog.number <- as.character(df[,catalog.number])
year.event <- df[,year.event]
date.identified <- df[,date.identified]
scientific.name <- as.character(df[,scientific.name])
determined.by <- as.character(df[,determined.by])
longitude <- df[,longitude]
latitude <- df[,latitude]
basis.of.rec <- df[,basis.of.rec]
media.type <- df[,media.type]
occ.id <- df[,occ.id]
rowID <- rownames(df)
data <- data.frame(rowID, occ.id, scientific.name, longitude, latitude,
year.event, determined.by, date.identified,
institution.source, collection.code,
catalog.number,media.type, basis.of.rec, stringsAsFactors = FALSE)
if(na.rm.coords){
ll.na <- is.na(data$longitude)
data <- data[!ll.na,]
lat.na <- is.na(data$latitude)
data <- data[!lat.na,]
}
data
}
r.occ <- reduce.df(occ, institution.source = institution.source,
collection.code = collection.code, catalog.number = catalog.number,
year.event = year.event, date.identified = date.identified,
scientific.name = scientific.name, determined.by = determined.by,
longitude = longitude, latitude = latitude, basis.of.rec = basis.of.rec,
media.type = media.type, occ.id = occ.id, na.rm.coords = na.rm.coords)
occ <- data_all_occ_sub
natList_column <- "naturaList_levels" %in% colnames(occ)
if (natList_column) {
col.number <- grep("naturaList_levels", colnames(occ))
occ <- occ[, -col.number]
warning("'occ' already had classification. The classification was remade")
}
r.occ <- reduce.df(occ, institution.source = institution.source,
collection.code = collection.code, catalog.number = catalog.number,
year.event = year.event, date.identified = date.identified,
scientific.name = scientific.name, determined.by = determined.by,
longitude = longitude, latitude = latitude, basis.of.rec = basis.of.rec,
media.type = media.type, occ.id = occ.id, na.rm.coords = na.rm.coords)
r.occ
df <- data_all_occ_sub
institution.source = "institutionCode"
collection.code = "collectionCode"
catalog.number = "catalogNumber"
year.event = "year"
date.identified = "dateIdentified"
scientific.name = "species"
determined.by = "identifiedBy"
longitude = "decimalLongitude"
latitude = "decimalLatitude"
basis.of.rec = "basisOfRecord"
media.type = "mediaType"
occ.id = "occurrenceID"
na.rm.coords = TRUE
institution.source <- as.character(df[,institution.source])
collection.code <- as.character(df[,collection.code])
catalog.number <- as.character(df[,catalog.number])
year.event <- df[,year.event]
institution.source
collection.code
catalog.number
year.event
date.identified
date.identified <- df[,date.identified]
date.identified
scientific.name <- as.character(df[,scientific.name])
scientific.name
determined.by <- as.character(df[,determined.by])
determined.by
longitude <- df[,longitude]
longitude
latitude <- df[,latitude]
latitude
basis.of.rec <- df[,basis.of.rec]
media.type
occ.id <- df[,occ.id]
occ.id
rowID <- rownames(df)
rowID
data.frame(rowID, occ.id, scientific.name, longitude, latitude,
year.event, determined.by, date.identified,
institution.source, collection.code,
catalog.number,media.type, basis.of.rec, stringsAsFactors = FALSE)
data
data <- data.frame(rowID, occ.id, scientific.name, longitude, latitude,
year.event, determined.by, date.identified,
institution.source, collection.code,
catalog.number,media.type, basis.of.rec, stringsAsFactors = FALSE)
if(na.rm.coords){
ll.na <- is.na(data$longitude)
data <- data[!ll.na,]
lat.na <- is.na(data$latitude)
data <- data[!lat.na,]
}
data
as.data.frame(data)
data
data.frame(rowID, occ.id, scientific.name, longitude, latitude,
year.event, determined.by, date.identified,
institution.source, collection.code,
catalog.number,media.type, basis.of.rec, stringsAsFactors = FALSE)
data_all_occ_sub <- as.data.frame(data_all_occ_sub)
data_all_occ_sub
# check out if there are strings which are not taxonomists
det_names_all <- get_det_names(data_all_occ_sub, freq = TRUE)
data("speciaLists") #specialist data frame
occ.class_all <- classify_occ(occ = data_all_occ_sub, spec = speciaLists, ignore.det.names = ig.names, na.rm.coords = TRUE)
occ.class_all
table(occ.class_all$naturaList_levels)
bioclim <- getData('worldclim', var='bio', res=10)
# Transform occurrence data in SpatialPointsDataFrame
spdf.occ.cl <- SpatialPoints(occ.class_all[, c("decimalLongitude", "decimalLatitude")])
# redefine the extent of bioclim layers based on buffer around the occurrences
c.bioclim <- crop(bioclim, buffer(spdf.occ.cl, 100000)) # 100km buffer
c.bioclim
# select two layers
raster.temp.prec <- c.bioclim[[c("bio1", "bio12")]]
df.temp.prec <- as.data.frame(raster.temp.prec)
### Define the environmental space for analysis
env.space <- define_env_space(df.temp.prec, buffer.size = 0.05)
# delimit the geographic space
# land area
land <- ne_countries(continent = 'south america')
un.land <- unionSpatialPolygons(land, land$scalerank)
# geo space based on crop
c.geo.space <- crop(un.land, c.bioclim)
#geo space based on intersect
i.geo.space <- intersect(un.land, buffer(spdf.occ.cl, 200000))
cl.eval_all <- clean_eval(occ.cl = occ.class_all,
env.space = env.space,
geo.space = c.geo.space,
r = raster.temp.prec) # cleaning process
area_remained <- cl.eval$area # the amount of area remained after cleaning process
area_remained <- cl.eval_all$area # the amount of area remained after cleaning process
area_remained
?naturaList::map_module
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(naturaList)
data("A.setosa") # occurrence points for A.setosa
data("speciaLists") # list of specialists for A.setosa
occ.class <- classify_occ(A.setosa, speciaLists)
occ.class <- classify_occ(A.setosa, speciaLists)
occ.select <- map_module(occ.class)
occ.select
Cyathea <- read.csv(file = "0209002-200613084148143.csv", header = TRUE)
Cyathea <- read.csv(file = "0209002-200613084148143.csv", header = TRUE, sep = ";")
Cyathea <- read.csv(file = "0209002-200613084148143.csv", header = TRUE, sep = " ")
Cyathea <- read.csv(file = "0209002-200613084148143.csv", header = TRUE, sep = ",")
Cyathea <- read.csv(file = "0209002-200613084148143.csv", header = TRUE, sep = ";")
Cyathea <- read.csv(file = "0209002-200613084148143.csv", header = TRUE, sep = ",")
Cyathea <- read.csv(file = "0209002-200613084148143.csv", header = TRUE, sep = ",")
Cyathea
View(Cyathea)
View(Cyathea)
Cyathea <- read.csv(file = "0209002-200613084148143.csv", header = TRUE, sep = "")
View(Cyathea)
Cyathea <- read.csv(file = "0209002-200613084148143.csv", header = TRUE, sep = ";")
Cyathea <- read.csv2(file = "0209002-200613084148143.csv", header = TRUE, sep = ";")
Cyathea <- read.csv2(file = "0209002-200613084148143.csv", header = TRUE, sep = ",")
Cyathea <- read.csv2(file = "0209002-200613084148143.csv", header = TRUE, sep = ",")
View(Cyathea)
Cyathea <- read.csv2(file = "0209002-200613084148143.csv", header = TRUE)
View(Cyathea)
Cyathea <- read.table(file = "0209002-200613084148143.txt", header = TRUE)
Cyathea <- read.table(file = "0209002-200613084148143.txt", header = TRUE)
tax_key <- name_suggest(q = "Cyathea", rank = "genus")
library(rgbif)
tax_key <- name_suggest(q = "Cyathea", rank = "genus")
lapply(tax_key$data$key, "occ_count")
taxa_key_alsophila <- tax_key$data$key[[1]]
taxa_key_cythea <- tax_key$data$key[[1]]
cythea_occ <- occ_download(
pred_in("taxonKey", taxa_key_cythea),
format = "SIMPLE_CSV",
user= "gabrielnaka",pwd = "35245721" ,email= "gabriel.nakamura.souza@gmail.com"
)
cythea_occ
Cyathea <- read.csv(file = "0209002-200613084148143 2.csv")
Cyathea <- read.csv(file = "0209002-200613084148143 2.csv", sep = "")
Cyathea <- read.csv2(file = "0209002-200613084148143 2.csv")
Cyathea <- read.csv2(file = "0209002-200613084148143 2.csv")
cythea_occ <- occ_download(
pred_in("taxonKey", taxa_key_cythea),
format = "SIMPLE_CSV",
user= "gabrielnaka",pwd = "35245721" ,email= "gabriel.nakamura.souza@gmail.com"
)
Cyathea <- read.csv2(file = "0209002-200613084148143 2.csv", sep = "")
Cyathea
View(Cyathea)
Cyathea <- read.csv2(file = "0209002-200613084148143 2.csv", sep = "")
save.image("~/OneDrive/Packages/naturaList_package/cythea_occ.RData")
load("cythea_occ.RData")
Cythea_occ <- Cyathea
usethis::use_data(Cythea_occ, naturaList, overwrite = T)
usethis::use_data(Cythea_occ, "naturaList", overwrite = T)
Cythea_occ
usethis::use_data(Cythea_occ, "naturaList", overwrite = T)
usethis::use_data(Cyathea, "naturaList", overwrite = T)
data(Cyathea)
data(Cyathea_occ)
Cythea_occ
Cythea_occ$species
as.character(Cythea_occ$species)
table(as.character(Cythea_occ$species))
View(Cythea_occ)
table(as.character(Cythea_occ$infraspecificEpithet))
as.character(Cythea_occ$infraspecificEpithet)
table(as.factor(Cythea_occ$infraspecificEpithet))
as.factor(Cythea_occ$infraspecificEpithet)
colnames(Cyathea)
data(Alsophuila)
data(Alsophila)
data(A.setosa)
View(A.setosa)
Cyathea <- read.table(file = "0209002-200613084148143 2.txt")
Cyathea <- read.table(file = "0209002-200613084148143 2.txt", sep = " ")
data("speciaLists")
speciaLists
